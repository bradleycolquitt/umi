Timer unit: 1e-06 s

Total time: 53.6379 s
File: /home/brad/src/seq_utils/python/bc_umi2_comp.py
Function: main at line 12

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    12                                           def main(basename):
    13         1            4      4.0      0.0      ROOT="/home/brad/src/seq_utils/python/test/"
    14         1            3      3.0      0.0      BASENAME = basename
    15                                           
    16         1            4      4.0      0.0      FASTQ=ROOT + BASENAME + ".fastq.gz"
    17         1            2      2.0      0.0      H5=ROOT + BASENAME
    18         1            7      7.0      0.0      BAM=FASTQ.split(".")[0]+".bam"
    19                                               #COMPS=["blosc", "lzo", "zlib"]
    20         1            3      3.0      0.0      COMPS=["blosc"]
    21                                           
    22                                               #pdb.set_trace()
    23                                           
    24                                               ## Align reads to genome using bowtie2
    25         1          184    184.0      0.0      if not os.path.exists(BAM):
    26                                                   print "Aligning..."
    27                                                   cmd_args = "bowtie2 -p 10 -x taeGut1 -U {0} -S {1}; process_sam.sh {1}".format(FASTQ, FASTQ.split(".")[0]+".sam")
    28                                                   print cmd_args
    29                                                   p = subprocess.Popen(cmd_args, shell=True)
    30                                                   p.wait()
    31                                           
    32                                               ## Load BC and UMI from fastq into HDF5
    33         2            8      4.0      0.0      for comp in COMPS:
    34         1           90     90.0      0.0          print "Testing " + comp
    35         1           14     14.0      0.0          h5 = "_".join([H5, comp]) + ".h5"
    36         1           55     55.0      0.0          if not os.path.exists(h5):
    37         1        40744  40744.0      0.1              ex = bc.extracter(FASTQ, h5, comp)
    38         1      1342118 1342118.0      2.5              ret = ex.read_fastq()
    39         1          402    402.0      0.0              ex.h5.close()
    40                                           
    41                                           
    42                                           
    43                                                   ## Update HDF5 with read aligned chrom and pos using read name as key
    44         1         1006   1006.0      0.0          hap1 = hap.bam_h5(BAM, h5)
    45         1           20     20.0      0.0          print "update()..."
    46         1     13884094 13884094.0     25.9          hap1.update()
    47         1           24     24.0      0.0          print "Indexing read column, create_index()..."
    48         1        16344  16344.0      0.0          hap1.h5.root.data.cols.name.create_index()
    49         1           15     15.0      0.0          print "update()..."
    50         1     13594811 13594811.0     25.3          hap1.update()
    51                                           
    52         1          864    864.0      0.0          hap1.h5.root.data.cols.name.remove_index()
    53         1           20     20.0      0.0          print "Indexing read column, create_csindex()..."
    54         1        11492  11492.0      0.0          hap1.h5.root.data.cols.name.create_csindex()
    55         1           13     13.0      0.0          print "update()..."
    56         1     12345572 12345572.0     23.0          hap1.update()
    57                                           
    58         1           19     19.0      0.0          print "Copying and sorting table..."
    59         1        51586  51586.0      0.1          hap1.h5.root.data.copy("/", "data2", sortby='name', propindexes=True)
    60         1         4358   4358.0      0.0          hap1.h5.move_node("/", newname="data", name="data2", overwrite=True)
    61                                           
    62         1           16     16.0      0.0          print "update()..."
    63         1     12343970 12343970.0     23.0          hap1.update()