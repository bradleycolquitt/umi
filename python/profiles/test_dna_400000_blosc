Timer unit: 1e-06 s

Total time: 411.766 s
File: /home/brad/src/seq_utils/python/bc_umi2_comp.py
Function: main at line 12

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    12                                           def main(basename):
    13         1            3      3.0      0.0      ROOT="/home/brad/src/seq_utils/python/test/"
    14         1            1      1.0      0.0      BASENAME = basename
    15                                           
    16         1            2      2.0      0.0      FASTQ=ROOT + BASENAME + ".fastq.gz"
    17         1            1      1.0      0.0      H5=ROOT + BASENAME
    18         1            3      3.0      0.0      BAM=FASTQ.split(".")[0]+".bam"
    19                                               #COMPS=["blosc", "lzo", "zlib"]
    20         1            1      1.0      0.0      COMPS=["blosc"]
    21                                           
    22                                               #pdb.set_trace()
    23                                           
    24                                               ## Align reads to genome using bowtie2
    25         1           93     93.0      0.0      if not os.path.exists(BAM):
    26         1           27     27.0      0.0          print "Aligning..."
    27         1           12     12.0      0.0          cmd_args = "bowtie2 -p 10 -x taeGut1 -U {0} -S {1}; process_sam.sh {1}".format(FASTQ, FASTQ.split(".")[0]+".sam")
    28         1           10     10.0      0.0          print cmd_args
    29         1         5644   5644.0      0.0          p = subprocess.Popen(cmd_args, shell=True)
    30         1      5796065 5796065.0      1.4          p.wait()
    31                                           
    32                                               ## Load BC and UMI from fastq into HDF5
    33         2           13      6.5      0.0      for comp in COMPS:
    34         1           61     61.0      0.0          print "Testing " + comp
    35         1           23     23.0      0.0          h5 = "_".join([H5, comp]) + ".h5"
    36         1           85     85.0      0.0          if not os.path.exists(h5):
    37         1       497495 497495.0      0.1              ex = bc.extracter(FASTQ, h5, comp)
    38         1     12047097 12047097.0      2.9              ret = ex.read_fastq()
    39         1          411    411.0      0.0              ex.h5.close()
    40                                           
    41                                           
    42                                           
    43                                                   ## Update HDF5 with read aligned chrom and pos using read name as key
    44         1         1061   1061.0      0.0          hap1 = hap.bam_h5(BAM, h5)
    45         1           21     21.0      0.0          print "Indexing read column, create_index()..."
    46         1        97213  97213.0      0.0          hap1.h5.root.data.cols.name.create_index()
    47         1           23     23.0      0.0          print "update()..."
    48         1    129435374 129435374.0     31.4          hap1.update()
    49                                           
    50         1         1078   1078.0      0.0          hap1.h5.root.data.cols.name.remove_index()
    51         1           21     21.0      0.0          print "Indexing read column, create_csindex()..."
    52         1        89942  89942.0      0.0          hap1.h5.root.data.cols.name.create_csindex()
    53         1           20     20.0      0.0          print "update()..."
    54         1    131426430 131426430.0     31.9          hap1.update()
    55                                           
    56         1           31     31.0      0.0          print "Copying and sorting table..."
    57         1       239340 239340.0      0.1          hap1.h5.root.data.copy("/", "data2", sortby='name', propindexes=True)
    58         1        14610  14610.0      0.0          hap1.h5.move_node("/", newname="data", name="data2", overwrite=True)
    59                                           
    60         1           21     21.0      0.0          print "update()..."
    61         1    132113604 132113604.0     32.1          hap1.update()